# -- POETRY CONFIG ----------------------------------------------------------------------

[tool.poetry]
name = "chub"
version = "0.1.0"
description = "Chub"
authors = ["Wayne Lambert <wayne.a.lambert@gmail.com>"]

[tool.poetry.dependencies]
python = "==3.9.10"
Django = "4.1.1"
djangorestframework = "3.13.1"
django-crispy-forms = "1.14.0"
django-storages = "1.13.1"
django-recaptcha = "3.0.0"
django-ses = "3.1.2"
django-sequences = "2.7"
django-localflavor = "==3.1"
django-phonenumber-field = "7.0.0"
phonenumbers = "8.12.55"
psycopg2-binary = "2.9.3"
dj-database-url = "1.0.0"
whitenoise = "6.2.0"
celery = "5.2.7"
redis = "4.3.4"
boto3 = "1.24.72"
gunicorn = "==20.1.0"
googlemaps = "4.6.0"
tablib = "3.1.0"
pytz = "2021.3"
django-htmx = "1.12.2"
Pillow = "9.2.0"
crispy-bootstrap5 = "0.6"
rich = "12.5.1"
requests = "2.28.1"
django-ninja = "0.19.1"
pywatchman = "1.4.2.dev1"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "3.6.0"
django-extensions = "3.2.1"
ptvsd = "==4.3.2"
pytest = "7.1.3"
pytest-django = "4.5.2"
pytest-cov = "3.0.0"
pytest-factoryboy = "2.5.0"
mixer = "7.2.2"
hypothesis = "6.54.5"
coverage = "6.4.4"
pycodestyle = "2.9.1"
pylint-django = "2.5.3"
ipdb = "==0.13.9"
bandit = "1.7.4"
interrogate = "1.5.0"
django-browser-reload = "1.6.0"
ipython = "8.5.0"
black = "22.8.0"
pylint = "2.15.0"
bpython = "0.23"

[[tool.poetry.source]]
name = "test"
url = "https://test.pypi.org/simple/"
secondary = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# -- PYLINT CONFIG ----------------------------------------------------------------------

[tool.pylint.master]
jobs="0"    # Auto-detect the number of processors
fail-under="10"
ignore-patterns='''
  \.eggs
  |_build
  |\.git
  |\.hg
  |\.mypy_cache
  |\.tox
  |\.venv
  |buck-out
  |build
  |conf.py
  |dist
'''
persistent = "no"
load-plugins = ["pylint_django"]
django-settings-module = "aa_project.settings"
limit-inference-results = "100"
suggestion-mode = "yes"
unsafe-load-any-extension = "no"
extension-pkg-whitelist = ""
exit-zero = "no"
from-stdin = "no"

[tool.pylint.message_control]
enable = [
  "F",  # Fatal
  "E",  # Error
  "W",  # Warning
  "R",  # Refactor
  "C",  # Convention
  "I",  # Informational
]
disable = """
  attribute-defined-outside-init,
  line-too-long,
  missing-class-docstring,
  missing-function-docstring,
  missing-module-docstring,
  no-self-use,
"""

[tool.pylint.reports]
reports = "no"
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"
output-format = "colorized"
score = "no"

[tool.pylint.format]
max-line-length = "99"

[tool.pylint.basic]
good-names = "_, qs, pk"

[tool.pylint.miscellaneous]
notes="TODO, FIXME, DEBUG, NOTE, DONE, TEMP BLOCK"

# -- BLACK CONFIG -----------------------------------------------------------------------

[tool.black]
line-length = 99
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# -- ISORT CONFIG -----------------------------------------------------------------------

[tool.isort]
atomic = true
line_length = 99
profile = "black"
include_trailing_comma = true
force_single_line = false
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
skip_glob = "*/.venv/*, */node_modules/*, */.git/*, */migrations/*"

sections = [
    "FUTURE",
    "STDLIB",
    "DJANGO",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
    "PUBLIC",
    "TENANTED"
]
known_django = "django"
known_third_party = [
  "PIL",
  "captcha",
  "celery",
  "dj_database_url",
  "googlemaps",
  "factory",
  "localflavor",
  "mixer",
  "ninja",
  "phonenumber_field",
  "pytest",
  "rest_framework",
  "rich",
  "sequences",
]
known_public = [
    "core",
]
known_tenanted = [
]
